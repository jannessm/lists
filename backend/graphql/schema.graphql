#import interfaces.graphql
#import user.graphql
#import lists.graphql
#import list-item.graphql

type Query @guard {
    pullMe(checkpoint: MeInputCheckpoint @spread, limit: Int!): MePullBulk!
  
    pullLists(checkpoint: ListsInputCheckpoint @spread, limit: Int!): ListsPullBulk!

    # pullUsers(checkpoint: UsersInputCheckpoint @spread, limit: Int!): UserPullBulk!
}

type Mutation @guard {
  pushMe(mePushRow: [MeInputPushRow!]): [User!]! @field(resolver: "App\\Models\\User@pushMeResolver")

  pushLists(listsPushRow: [ListsInputPushRow!]): [Lists!]! @field(resolver: "App\\Models\\Lists@pushResolver")

  # upsertTask(task: TaskInput! @spread): Task @upsert @inject(context: "user.id", name: "user_id") @broadcast(subscription: "streamTasks")
}

type Subscription @guard {
  streamMe(headers: MeInputHeaders): MePullBulk
  streamLists(headers: ListsInputHeaders): ListsPullBulk
  # streamUsers(headers: UsersInputHeaders): UserPullBulk
}