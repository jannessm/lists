####### Query Types #############

"Account of a person who utilizes this application."
type User implements Item {
  "Unique primary key."
  id: String!

  "Non-unique name."
  name: String!

  "Unique email address."
  email: String!

  "When the email was verified."
  emailVerifiedAt: DateTime @canRoot(ability: "view") @rename(attribute: "email_verified_at")

  "Theme setting: One of ['auto', 'dark', 'light']"
  theme: String @canRoot(ability: "view")
  
  "When item was created."
  createdAt: DateTime! @rename(attribute: "created_at")

  "When item was last updated."
  updatedAt: DateTime! @rename(attribute: "updated_at")

  "Delete flag for rxDB"
  _deleted: Boolean!
}



####### Input Types #########

input UserInput {
  id: String!
  name: String!
  email: String!
  emailVerifiedAt: DateTime @canRoot(ability: "view") @rename(attribute: "email_verified_at")
  theme: String @canRoot(ability: "view")
  createdAt: DateTime! @rename(attribute: "created_at")
  updatedAt: DateTime! @rename(attribute: "updated_at")
  _deleted: Boolean!
}

input MeInputHeaders {
  id: String
}

input MeInputPushRow {
  newDocumentState: UserInput!
  assumedMasterState: UserInput!
}

input MeInputCheckpoint {
  updatedAt: DateTime @where(key: "updated_at", operator: ">=")
}

input UsersInputHeaders {
  id: String
}

input UsersInputPushRow {
  newDocumentState: UserInput!
  assumedMasterState: UserInput!
}

input UsersInputCheckpoint {
  id: String @where(operator: ">=")
  updatedAt: DateTime @where(key: "updated_at", operator: ">=")
}


####### Response Types #######

type UserPullBulk {
  documents: [User]!
  checkpoint: CheckpointType
}

type MePullBulk {
  documents: [User]!
  checkpoint: CheckpointType
}